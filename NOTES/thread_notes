#notes for threads and how to use
###################################3
#class called thread in java
#extends Thread
#@Override run method in thread to tell thread what to do
#all threads have thread ID which is final
##################################
#when multithreading, final is essential (threads cause problems by trying to modify stuff without permission)
#run does not throw an exception
#so try-catch might be important
#the semaphore class makes code run in parallel
#each worker has own number and reference to semaphore
#private final Semaphore semaphore;
#always release semaphore in finally block to release 'pass'
#semaphore.release()
#worker implements runnable
#x.aquire() to get license
#x.release() to give it back
#do not allow threads to access data at same time
#####################################3
#parsing fastas in parallel
#volatile keyword means all threads have visibility of method or variable
#split file into multiple files
#parse each file with seperate worker
#############################333
#threads in gui's
#awt thread ActionListener implementation
#the awt thread is what updates the gui, so don't put it on loops i guess
#make action listener do quick stuff (add in new thread to handle slow tasks to prevent awt thread from freezing)
#most swing methods are not thread safe, so keep them on the awt thread
#only threadsafe methods can be called from external threads
#(enabling and disabling buttons should be done on other threads)
